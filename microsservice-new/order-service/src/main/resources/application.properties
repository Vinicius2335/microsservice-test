spring.datasource.url=jdbc:mysql://localhost:3306/product-service?useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=admin

spring.jpa.hibernate.ddl-auto=update
logging.level.org.hibernate.SQL=DEBUG

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

server.port=8081
spring.application.name=order-service

# antes de usar o security
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilinece4j Properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilinece4j Timeout Properties
# tempo limite para o metodo executar, se não lança uma Exception
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilinece4j Retry Properties
# tenta novamente executar o metodo 3x a cada 5s
resilience4j.retry.instances.inventory.max-attenpts=3
resilience4j.retry.instances.inventory.wait-duration=5s

## Distributed Tracing Zipkin Properties
spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sanpler.probability=1.0